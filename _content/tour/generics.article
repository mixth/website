Generics
Go ให้เราเขียน generic ได้ด้วยการใช้ type parameters โดยในบทนี้จะแสดงให้เห็นตัวอย่างการใช้ generics ในโค้ดของคุณ

The Go Authors
https://golang.org

* Type parameters

ฟังก์ชันใน Go สามารถถูกเขียนให้ทำงานได้กับ type ที่หลากหลายด้วยการใช้ type parameters
โดยเจ้า type parameers ของฟังก์ชันจะปรากฎให้เห็นในวงเล็บก้ามปู ก่อนหน้าอากิวเม้นต์ของฟังก์ชัน

  func Index[T comparable](s []T, x T) int

การประกาศแบบนี้หมายความว่า ตัวแปร `s` คือ slice ของ type `T` โดยใช้ constraint
จาก built-in ที่ชื่อว่า `comparable` ส่วน `x` เป็นค่าที่มี type เดียวกัน

`comparable` เป็น constraint ที่มีประโยชน์ในการช่วยให้ค่านั้นสามารถใช้โอเปอเรเตอร์ `==` และ `!=` ได้
ในตัวอย่างนี้ เราใช้มันเปรียบเทียบค่าทั้งหมดใน slice แต่ละชิ้นจนกว่าจะเจอค่าที่ตรงกัน
นี่ทำให้ฟังก์ชัน `Index` สามารถทำงานได้กับ type ไหนก็ได้ที่สามารถนำค่ามาเปรียบเทียบกันได้นั่นเอง

.play generics/index.go

* Generic types

นอกเหนือจากการทำ generic function แล้ว Go ยังสนับสนุนการทำ generic types ด้วย
โดยสามารถกำหนด type เข้าไปเป็นพารามิเตอร์ ซึ่งเป็นประโยชน์ในการทำ generic ให้กับข้อมูลเชิงโครงสร้างได้อีก

โดยในตัวอย่างนี้จะเป็นการจำลองตัวอย่างการประกาศ type อย่างง่าย ด้วยการเชื่อมโยง type ประเภท any
ลงไปในค่า value ที่ถือไว้

ลองฝึกฝนด้วยการเพิ่มการทำงานบางอย่างลงไปดู

.play generics/list.go

* ยินดีด้วย!

คุณเรียนจบบทนี้แล้ว!

คุณสามารถย้อนกลับไปดูรายการของ [[/list][modules]] เพื่อหาสิ่งที่ต้องการจะเรียนต่อ หรือไปที่ [[javascript:click('.next-page')][next lesson]] ด้วยกันเลย
